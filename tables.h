
#define TO_FIXED(x)                 ((uint64_t)((x) * (1 << 16)))
#define FROM_FIXED_MULT(x)          ((x) >> 32)

#define PULSES_PER_MM_THREAD(x)     ((x) * DRIVE_RATIO * ((STEPPER_PULSES / ENCODER_PULSES) / LEADSCREW_PITCH))
#define PULSES_PER_MM_FEED(x)       ((x) * DRIVE_RATIO * ((STEPPER_PULSES / ENCODER_PULSES) / FEEDSCREW_PITCH))
#define PULSES_PER_THOU_FEED(x)     PULSES_PER_MM_FEED((x) * 0.0254)
#define PULSES_PER_TPI(x)           PULSES_PER_MM_THREAD(25.4 / (x))


typedef struct
{
	uint32_t steps_per_pulse;
	uint8_t dig1000;
	uint8_t dig100;
	uint8_t dig10;
	uint8_t dig1;
} table_entry_t;

table_entry_t table_mm_thread[] = 
{
	{ TO_FIXED(PULSES_PER_MM_THREAD(0.20)), BLANK, 0 | POINT, 2, 0 },
	{ TO_FIXED(PULSES_PER_MM_THREAD(0.25)), BLANK, 0 | POINT, 2, 5 },
	{ TO_FIXED(PULSES_PER_MM_THREAD(0.30)), BLANK, 0 | POINT, 3, 0 },
	{ TO_FIXED(PULSES_PER_MM_THREAD(0.35)), BLANK, 0 | POINT, 3, 5 },
	{ TO_FIXED(PULSES_PER_MM_THREAD(0.40)), BLANK, 0 | POINT, 4, 0 },
	{ TO_FIXED(PULSES_PER_MM_THREAD(0.45)), BLANK, 0 | POINT, 4, 5 },
	{ TO_FIXED(PULSES_PER_MM_THREAD(0.50)), BLANK, 0 | POINT, 5, 0 },
	{ TO_FIXED(PULSES_PER_MM_THREAD(0.55)), BLANK, 0 | POINT, 5, 5 },
	{ TO_FIXED(PULSES_PER_MM_THREAD(0.60)), BLANK, 0 | POINT, 6, 0 },
	{ TO_FIXED(PULSES_PER_MM_THREAD(0.65)), BLANK, 0 | POINT, 6, 5 },
	{ TO_FIXED(PULSES_PER_MM_THREAD(0.70)), BLANK, 0 | POINT, 7, 0 },
	{ TO_FIXED(PULSES_PER_MM_THREAD(0.75)), BLANK, 0 | POINT, 7, 5 },
	{ TO_FIXED(PULSES_PER_MM_THREAD(0.80)), BLANK, 0 | POINT, 8, 0 },
	{ TO_FIXED(PULSES_PER_MM_THREAD(1.00)), BLANK, 1 | POINT, 0, 0 },
	{ TO_FIXED(PULSES_PER_MM_THREAD(1.25)), BLANK, 1 | POINT, 2, 5 },
	{ TO_FIXED(PULSES_PER_MM_THREAD(1.50)), BLANK, 1 | POINT, 5, 0 },
	{ TO_FIXED(PULSES_PER_MM_THREAD(1.75)), BLANK, 1 | POINT, 7, 5 },
	{ TO_FIXED(PULSES_PER_MM_THREAD(2.00)), BLANK, 2 | POINT, 0, 0 },
	{ TO_FIXED(PULSES_PER_MM_THREAD(2.50)), BLANK, 2 | POINT, 5, 0 },
	{ TO_FIXED(PULSES_PER_MM_THREAD(3.00)), BLANK, 3 | POINT, 0, 0 },
	{ TO_FIXED(PULSES_PER_MM_THREAD(3.50)), BLANK, 3 | POINT, 5, 0 },
	{ TO_FIXED(PULSES_PER_MM_THREAD(4.00)), BLANK, 4 | POINT, 0, 0 },
	{ TO_FIXED(PULSES_PER_MM_THREAD(4.50)), BLANK, 4 | POINT, 5, 0 },
	{ TO_FIXED(PULSES_PER_MM_THREAD(5.00)), BLANK, 5 | POINT, 0, 0 },
	{ TO_FIXED(PULSES_PER_MM_THREAD(5.50)), BLANK, 5 | POINT, 5, 0 },
	{ TO_FIXED(PULSES_PER_MM_THREAD(6.00)), BLANK, 6 | POINT, 0, 0 },
};

table_entry_t table_mm_feed[] =
{
	{ TO_FIXED(PULSES_PER_MM_FEED(0.02)), BLANK, 0 | POINT, 0, 2 },
	{ TO_FIXED(PULSES_PER_MM_FEED(0.05)), BLANK, 0 | POINT, 0, 5 },
	{ TO_FIXED(PULSES_PER_MM_FEED(0.10)), BLANK, 0 | POINT, 1, 0 },
	{ TO_FIXED(PULSES_PER_MM_FEED(0.12)), BLANK, 0 | POINT, 1, 2 },
	{ TO_FIXED(PULSES_PER_MM_FEED(0.15)), BLANK, 0 | POINT, 1, 5 },
	{ TO_FIXED(PULSES_PER_MM_FEED(0.17)), BLANK, 0 | POINT, 1, 7 },
	{ TO_FIXED(PULSES_PER_MM_FEED(0.20)), BLANK, 0 | POINT, 2, 0 },
	{ TO_FIXED(PULSES_PER_MM_FEED(0.22)), BLANK, 0 | POINT, 2, 2 },
	{ TO_FIXED(PULSES_PER_MM_FEED(0.25)), BLANK, 0 | POINT, 2, 5 },
	{ TO_FIXED(PULSES_PER_MM_FEED(0.27)), BLANK, 0 | POINT, 2, 7 },
	{ TO_FIXED(PULSES_PER_MM_FEED(0.30)), BLANK, 0 | POINT, 3, 0 },
	{ TO_FIXED(PULSES_PER_MM_FEED(0.35)), BLANK, 0 | POINT, 3, 5 },
	{ TO_FIXED(PULSES_PER_MM_FEED(0.40)), BLANK, 0 | POINT, 4, 0 },
	{ TO_FIXED(PULSES_PER_MM_FEED(0.45)), BLANK, 0 | POINT, 4, 5 },
	{ TO_FIXED(PULSES_PER_MM_FEED(0.50)), BLANK, 0 | POINT, 5, 0 },
	{ TO_FIXED(PULSES_PER_MM_FEED(0.55)), BLANK, 0 | POINT, 5, 5 },
	{ TO_FIXED(PULSES_PER_MM_FEED(0.60)), BLANK, 0 | POINT, 6, 0 },
	{ TO_FIXED(PULSES_PER_MM_FEED(0.70)), BLANK, 0 | POINT, 7, 0 },
	{ TO_FIXED(PULSES_PER_MM_FEED(0.85)), BLANK, 0 | POINT, 8, 5 },
	{ TO_FIXED(PULSES_PER_MM_FEED(1.00)), BLANK, 1 | POINT, 0, 0 },
};

table_entry_t table_inch_thread[] =
{
	{ TO_FIXED(PULSES_PER_TPI(8)), BLANK, BLANK, BLANK, 8 },
	{ TO_FIXED(PULSES_PER_TPI(9)), BLANK, BLANK, BLANK, 9 },
	{ TO_FIXED(PULSES_PER_TPI(10)), BLANK, BLANK, 1, 0 },
	{ TO_FIXED(PULSES_PER_TPI(11)), BLANK, BLANK, 1, 1 },
	{ TO_FIXED(PULSES_PER_TPI(12)), BLANK, BLANK, 1, 2 },
	{ TO_FIXED(PULSES_PER_TPI(13)), BLANK, BLANK, 1, 3 },
	{ TO_FIXED(PULSES_PER_TPI(14)), BLANK, BLANK, 1, 4 },
	{ TO_FIXED(PULSES_PER_TPI(16)), BLANK, BLANK, 1, 6 },
	{ TO_FIXED(PULSES_PER_TPI(18)), BLANK, BLANK, 1, 8 },
	{ TO_FIXED(PULSES_PER_TPI(19)), BLANK, BLANK, 1, 9 },
	{ TO_FIXED(PULSES_PER_TPI(20)), BLANK, BLANK, 2, 0 },
	{ TO_FIXED(PULSES_PER_TPI(24)), BLANK, BLANK, 2, 4 },
	{ TO_FIXED(PULSES_PER_TPI(26)), BLANK, BLANK, 2, 6 },
	{ TO_FIXED(PULSES_PER_TPI(27)), BLANK, BLANK, 2, 7 },
	{ TO_FIXED(PULSES_PER_TPI(28)), BLANK, BLANK, 2, 8 },
	{ TO_FIXED(PULSES_PER_TPI(32)), BLANK, BLANK, 3, 2 },
	{ TO_FIXED(PULSES_PER_TPI(36)), BLANK, BLANK, 3, 6 },
	{ TO_FIXED(PULSES_PER_TPI(40)), BLANK, BLANK, 4, 0 },
	{ TO_FIXED(PULSES_PER_TPI(44)), BLANK, BLANK, 4, 4 },
	{ TO_FIXED(PULSES_PER_TPI(48)), BLANK, BLANK, 4, 8 },
	{ TO_FIXED(PULSES_PER_TPI(56)), BLANK, BLANK, 5, 6 },
	{ TO_FIXED(PULSES_PER_TPI(64)), BLANK, BLANK, 6, 4 },
	{ TO_FIXED(PULSES_PER_TPI(72)), BLANK, BLANK, 7, 2 },
	{ TO_FIXED(PULSES_PER_TPI(80)), BLANK, BLANK, 8, 0 },
};

table_entry_t table_inch_feed[] =
{
	{ TO_FIXED(PULSES_PER_THOU_FEED(1)), BLANK, 0, 0, 1 },
	{ TO_FIXED(PULSES_PER_THOU_FEED(2)), BLANK, 0, 0, 2 },
	{ TO_FIXED(PULSES_PER_THOU_FEED(3)), BLANK, 0, 0, 3 },
	{ TO_FIXED(PULSES_PER_THOU_FEED(4)), BLANK, 0, 0, 4 },
	{ TO_FIXED(PULSES_PER_THOU_FEED(5)), BLANK, 0, 0, 5 },
	{ TO_FIXED(PULSES_PER_THOU_FEED(6)), BLANK, 0, 0, 6 },
	{ TO_FIXED(PULSES_PER_THOU_FEED(7)), BLANK, 0, 0, 7 },
	{ TO_FIXED(PULSES_PER_THOU_FEED(8)), BLANK, 0, 0, 8 },
	{ TO_FIXED(PULSES_PER_THOU_FEED(9)), BLANK, 0, 0, 9 },
	{ TO_FIXED(PULSES_PER_THOU_FEED(10)), BLANK, 0, 1, 0 },
	{ TO_FIXED(PULSES_PER_THOU_FEED(11)), BLANK, 0, 1, 1 },
	{ TO_FIXED(PULSES_PER_THOU_FEED(12)), BLANK, 0, 1, 2 },
	{ TO_FIXED(PULSES_PER_THOU_FEED(13)), BLANK, 0, 1, 3 },
	{ TO_FIXED(PULSES_PER_THOU_FEED(15)), BLANK, 0, 1, 4 },
	{ TO_FIXED(PULSES_PER_THOU_FEED(17)), BLANK, 0, 1, 7 },
	{ TO_FIXED(PULSES_PER_THOU_FEED(20)), BLANK, 0, 2, 0 },
	{ TO_FIXED(PULSES_PER_THOU_FEED(23)), BLANK, 0, 2, 3 },
	{ TO_FIXED(PULSES_PER_THOU_FEED(26)), BLANK, 0, 2, 6 },
	{ TO_FIXED(PULSES_PER_THOU_FEED(30)), BLANK, 0, 3, 0 },
	{ TO_FIXED(PULSES_PER_THOU_FEED(35)), BLANK, 0, 3, 5 },
	{ TO_FIXED(PULSES_PER_THOU_FEED(40)), BLANK, 0, 4, 0 },
};
